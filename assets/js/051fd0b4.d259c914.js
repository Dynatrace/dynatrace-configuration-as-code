"use strict";(self.webpackChunkmonaco=self.webpackChunkmonaco||[]).push([[8749],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return t?a.createElement(f,l(l({ref:n},u),{},{components:t})):a.createElement(f,l({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=p;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(7294),o=t(6010);const r="tabItem_Ymn6";function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,l),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(7462),o=t(7294),r=t(6010),l=t(2389),i=t(7392),s=t(7094),c=t(2466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){var n,t;const{lazy:l,block:p,defaultValue:m,values:f,groupId:y,className:v}=e,h=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:h.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),g=(0,i.l)(b,((e,n)=>e.value===n.value));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const w=null===m?m:null!=(n=null!=m?m:null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)?n:h[0].props.value;if(null!==w&&!b.some((e=>e.value===w)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:O}=(0,s.U)(),[T,N]=(0,o.useState)(w),x=[],{blockElementScrollPositionUntilNextRender:E}=(0,c.o5)();if(null!=y){const e=k[y];null!=e&&e!==T&&b.some((n=>n.value===e))&&N(e)}const j=e=>{const n=e.currentTarget,t=x.indexOf(n),a=b[t].value;a!==T&&(E(n),N(a),null!=y&&O(y,String(a)))},C=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=x.indexOf(e.currentTarget)+1;t=null!=(a=x[n])?a:x[0];break}case"ArrowLeft":{var o;const n=x.indexOf(e.currentTarget)-1;t=null!=(o=x[n])?o:x[x.length-1];break}}null==(n=t)||n.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":p},v)},b.map((e=>{let{value:n,label:t,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:e=>x.push(e),onKeyDown:C,onFocus:j,onClick:j},l,{className:(0,r.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":T===n})}),null!=t?t:n)}))),l?(0,o.cloneElement)(h.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},h.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==T})))))}function m(e){const n=(0,l.Z)();return o.createElement(p,(0,a.Z)({key:String(n)},e))}},734:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=t(7462),o=(t(7294),t(3905)),r=t(5488),l=t(5162);const i={sidebar_position:2,title:"Install Monaco"},s=void 0,c={unversionedId:"installation",id:"version-1.5.3/installation",title:"Install Monaco",description:"To use monaco you will need to install it. Monaco is distributed as a binary package.",source:"@site/versioned_docs/version-1.5.3/installation.md",sourceDirName:".",slug:"/installation",permalink:"/dynatrace-configuration-as-code/1.5.3/installation",draft:!1,editUrl:"https://github.com/dynatrace/dynatrace-configuration-as-code/edit/main/documentation/versioned_docs/version-1.5.3/installation.md",tags:[],version:"1.5.3",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Install Monaco"},sidebar:"version-1.5.3/tutorialSidebar",previous:{title:"What is Monaco?",permalink:"/dynatrace-configuration-as-code/1.5.3/"},next:{title:"Validating Configuration",permalink:"/dynatrace-configuration-as-code/1.5.3/commands/validating-configuration"}},u={},d=[{value:"Verify Download",id:"verify-download",level:2}],p={toc:d};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To use monaco you will need to install it. Monaco is distributed as a binary package."),(0,o.kt)("p",null,"To install Monaco, find the appropriate executable for your system and download it."),(0,o.kt)("p",null,"Ensure that the monaco binary is available on your PATH. This process will differ depending on your operating system. This process will differ depending on your operating system."),(0,o.kt)("p",null,"Executables are available in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dynatrace/dynatrace-configuration-as-code/releases"},"release page"),"."),(0,o.kt)(r.Z,{defaultValue:"operating system",values:[{label:"Operating System",value:"operating system"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"operating system",mdxType:"TabItem"},(0,o.kt)(r.Z,{defaultValue:"linux-macos",values:[{label:"Linux / macOS",value:"linux-macos"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"linux-macos",mdxType:"TabItem"},(0,o.kt)("p",null,"This is an example using ",(0,o.kt)("inlineCode",{parentName:"p"},"curl"),". If you don't have ",(0,o.kt)("inlineCode",{parentName:"p"},"curl"),", install it, or use ",(0,o.kt)("inlineCode",{parentName:"p"},"wget"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# Linux\n# x64\n$ curl -L https://github.com/dynatrace/dynatrace-configuration-as-code/releases/download/v1.5.3/monaco-linux-amd64 -o monaco\n\n# x86\n$ curl -L https://github.com/dynatrace/dynatrace-configuration-as-code/releases/download/v1.5.3/monaco-linux-386 -o monaco\n\n# macOS\n$ curl -L https://github.com/dynatrace/dynatrace-configuration-as-code/releases/download/v1.5.3/monaco-darwin-10.12-amd64 -o monaco\n")),(0,o.kt)("p",null,"Make the binary executable:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ chmod +x monaco\n")),(0,o.kt)("p",null,"Optionally install monaco to a central location in your ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),".\nThis command assumes that the binary is currently in your downloads folder and that your PATH includes ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/local/bin"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"# use any path that suits you, this is just a standard example. Install sudo if needed.\n$ sudo mv ~/Downloads/monaco /usr/local/bin/\n")),(0,o.kt)("h2",{id:"verify-download"},"Verify Download"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ monaco\nYou are currently using the old CLI structure which will be used by\ndefault until monaco version 2.0.0\nCheck out the beta of the new CLI by adding the environment variable\n  \"NEW_CLI\".\nWe can't wait for your feedback.\nNAME:\n   monaco-linux-amd64 - Automates the deployment of Dynatrace Monitoring Configuration to one or multiple Dynatrace environments.\nUSAGE:\n   monaco-linux-amd64 [global options] command [command options] [working directory]\nVERSION:\n   1.5.1\nDESCRIPTION:\n   Tool used to deploy dynatrace configurations via the cli\n   Examples:\n     Deploy a specific project inside a root config folder:\n       monaco -p='project-folder' -e='environments.yaml' projects-root-folder\n     Deploy a specific project to a specific tenant:\n       monaco --environments environments.yaml --specific-environment dev --project myProject\nCOMMANDS:\n   help, h  Shows a list of commands or help for one command\nGLOBAL OPTIONS:\n   --verbose, -v                             (default: false)\n   --environments value, -e value            Yaml file containing environments to deploy to\n   --specific-environment value, --se value  Specific environment (from list) to deploy to (default: none)\n   --project value, -p value                 Project configuration to deploy (also deploys any dependent configurations) (default: none)\n   --dry-run, -d                             Switches to just validation instead of actual deployment (default: false)\n   --continue-on-error, -c                   Proceed deployment even if config upload fails (default: false)\n   --help, -h                                show help (default: false)\n   --version                                 print the version (default: false)\n2021-05-04 11:25:04 ERROR Required flag \"environments\" not set\n"))),(0,o.kt)(l.Z,{value:"windows",mdxType:"TabItem"},(0,o.kt)("p",null,"From the user interface, use this ",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/1618280/where-can-i-set-path-to-make-exe-on-windows"},"Stack OverFlow")," instructions to set the PATH on Windows.\nVerify the installation by running ",(0,o.kt)("inlineCode",{parentName:"p"},"monaco"),"  from your terminal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ monaco\nYYou are currently using the old CLI structure which will be used by\ndefault until monaco version 2.0.0\n\nCheck out the beta of the new CLI by adding the environment variable\n  \"NEW_CLI\".\n\nWe can't wait for your feedback.\n\nNAME:\n   monaco.exe - Automates the deployment of Dynatrace Monitoring Configuration to one or multiple Dynatrace environments.\n\nUSAGE:\n   monaco.exe [global options] command [command options] [working directory]\n\nVERSION:\n   1.5.0\n\nDESCRIPTION:\n   Tool used to deploy dynatrace configurations via the cli\n\n   Examples:\n     Deploy a specific project inside a root config folder:\n       monaco -p='project-folder' -e='environments.yaml' projects-root-folder\n\n     Deploy a specific project to a specific tenant:\n       monaco --environments environments.yaml --specific-environment dev --project myProject\n\nCOMMANDS:\n   help, h  Shows a list of commands or help for one command\n\nGLOBAL OPTIONS:\n   --verbose, -v                             (default: false)\n   --environments value, -e value            Yaml file containing environments to deploy to\n   --specific-environment value, --se value  Specific environment (from list) to deploy to (default: none)\n   --project value, -p value                 Project configuration to deploy (also deploys any dependent configurations) (default: none)\n   --dry-run, -d                             Switches to just validation instead of actual deployment (default: false)\n   --continue-on-error, -c                   Proceed deployment even if config upload fails (default: false)\n   --help, -h                                show help (default: false)\n   --version                                 print the version (default: false)\n2021-05-06 14:19:32 ERROR Required flag \"environments\" not set\n")))))))}m.isMDXComponent=!0}}]);