"use strict";(self.webpackChunkmonaco=self.webpackChunkmonaco||[]).push([[4443],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(f,r(r({ref:t},c),{},{components:n})):a.createElement(f,r({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9019:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={sidebar_position:1},r="How to add a new API",l={unversionedId:"Guides/add_new_api",id:"version-1.6.0/Guides/add_new_api",title:"How to add a new API",description:"You spotted a new API which you want to automate using monaco, but sadly it's not in the",source:"@site/versioned_docs/version-1.6.0/Guides/add_new_api.md",sourceDirName:"Guides",slug:"/Guides/add_new_api",permalink:"/dynatrace-monitoring-as-code/1.6.0/Guides/add_new_api",draft:!1,editUrl:"https://github.com/dynatrace-oss/dynatrace-monitoring-as-code/edit/main/documentation/versioned_docs/version-1.6.0/Guides/add_new_api.md",tags:[],version:"1.6.0",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"version-1.6.0/tutorialSidebar",previous:{title:"Configuration Types and Token Permissions",permalink:"/dynatrace-monitoring-as-code/1.6.0/configuration/configTypes_tokenPermissions"},next:{title:"License and Bill of material",permalink:"/dynatrace-monitoring-as-code/1.6.0/license"}},s={},p=[{value:"Easy-to-add API Characteristics",id:"easy-to-add-api-characteristics",level:2},{value:"Steps to add an API",id:"steps-to-add-an-api",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-add-a-new-api"},"How to add a new API"),(0,o.kt)("p",null,"You spotted a new API which you want to automate using ",(0,o.kt)("inlineCode",{parentName:"p"},"monaco"),", but sadly it's not in the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dynatrace-oss/dynatrace-monitoring-as-code#configuration-types--apis"},"table of supported APIs"),"?"),(0,o.kt)("p",null,"Usually, the addition of new APIs to ",(0,o.kt)("inlineCode",{parentName:"p"},"monaco")," is straightforward and requires little programming\nexperience. Only some APIs require you to do more coding. There are certain criteria for differentiating the two cases."),(0,o.kt)("h2",{id:"easy-to-add-api-characteristics"},"Easy-to-add API Characteristics"),(0,o.kt)("p",null,"Easy-to-add APIs have these characteristics:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"It implements the following HTTP methods. E.g for configuration APIs that is: "),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"GET <my-environment>/api/config/v1/<my-config>")," (get all configs)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"GET <my-environment>/api/config/v1/<my-config>/<id>")," (get a single config)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"POST <my-environment>/api/config/v1/<my-config>")," (create a new config)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PUT <my-environment>/api/config/v1/<my-config>/<id>")," (change an existing config)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"DELETE <my-environment>/api/config/v1/<my-config>/<id>")," (delete a config)"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The model of the configuration has a ",(0,o.kt)("inlineCode",{parentName:"p"},"name")," property: "))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n      "id": "acbed0c4-4ef1-4303-991f-102510a69322",\n      "name: "my-name"\n      ...\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"GET (all)")," REST call return ",(0,o.kt)("inlineCode",{parentName:"li"},"id")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"name"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "values": [\n      {\n        "id": "string",\n        "name": "string"\n      }\n    ]\n}\n')),(0,o.kt)("p",null,"If your API supports these 3 characteristics, you just need to perform the steps in the following section to add it."),(0,o.kt)("p",null,"However, if your API does not fulfil the above requirements, please open a ticket in ",(0,o.kt)("inlineCode",{parentName:"p"},"monaco"),"'s backlog\nto get implementation feedback from the maintainers."),(0,o.kt)("h2",{id:"steps-to-add-an-api"},"Steps to add an API"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add your API to ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/dynatrace-oss/dynatrace-monitoring-as-code/blob/main/pkg/api/api.go#L25"},"the map in api.go"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'  "<my-api-folder-name>": {\n      apiPath: "<path-to-my-api>",                       // mandatory\n      propertyNameOfGetAllResponse: "<property-name>",   // not necessary in case of "values"\n  },\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Fill the 4 placeholder values from above:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<my-api-folder-name>"),": This is the name of the API, which is also used for the folder name\nyou need to place your configurations in. Please take a look at the existing API names to get a\nfeeling for the naming conventions and choose it accordingly."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<path-to-my-api>"),": This path points to your API. ",(0,o.kt)("inlineCode",{parentName:"li"},"monaco")," prefixes it with the environment\nURL to access the configs of your API."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<property-name>"),": This names the json property used in the ",(0,o.kt)("inlineCode",{parentName:"li"},"GET ALL")," REST call to\nreturn the list of configs. E.g. it would be ",(0,o.kt)("inlineCode",{parentName:"li"},"extensions"),", if the response of your API's\n",(0,o.kt)("inlineCode",{parentName:"li"},"GET ALL")," REST call looks like this:")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'    {\n      "extensions": [\n        {\n          "id": "custom.python.connectionpool",\n          "name": "Connection Pool",\n          "type": "ONEAGENT"\n        }\n      ],\n        "totalResults": 9,\n        "nextPageToken": "LlUdYmu5S2MfX/ppfCInR9M="\n      }\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add a sample config for the integration tests in ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/dynatrace-oss/dynatrace-monitoring-as-code/tree/main/cmd/monaco/test-resources/integration-all-configs"},"cmd/monaco/test-resources/integration-all-configs")),(0,o.kt)("li",{parentName:"ul"},"Add your API to the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/dynatrace-oss/dynatrace-monitoring-as-code#configuration-types--apis"},"table of supported APIs"),".")),(0,o.kt)("p",null,"After performing these steps, please create the pull request in the upstream repository.\nOther users of ",(0,o.kt)("inlineCode",{parentName:"p"},"monaco")," will thank you! \ud83d\ude80"))}d.isMDXComponent=!0}}]);