name: Build and Test

# This workflow builds the code and runs the unit tests and integration tests.
#
# If this workflow is executed in the context of a fork, the integration tests are
# skipped and just the unit tests are executed. See the workflow "Trigger
# Integration Tests for Forks" for more details on how the integration tests are
# executed for forks.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group: # run if triggered as part of a merge queue
  schedule:
    # this is checking periodically if there are any breaking API changes
    # Every day at 00:00
    - cron: '0 0 * * *'

defaults:
  run:
    shell: bash

jobs:
  build_test:
    name: Build and Test
    permissions:
      contents: read
      checks: write
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Check out code into the Go module directory
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 #v4.1.6

      - name: 🛠️ Set up Go 1.x
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 #v5.0.1
        with:
          go-version: '~1.22'

      - name: 🏗️ Compile
        run: make compile

      - name: 🧪 Unit test
        run: make test testopts="--junitfile test-result-ubuntu-latest-unit.xml"

      - name: ⬆️ Upload Test Results
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 #v4.3.3
        if: always()
        with:
          name: Test Results - Unit
          path: test-result-*.xml

      - name: 🚀 Binary starts
        run: go run ./cmd/monaco

  upload_event:
    name: "Upload Event File"
    runs-on: ubuntu-latest
    steps:
      - name: Upload
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 #v4.3.3
        with:
          name: event_file
          path: ${{ github.event_path }}
