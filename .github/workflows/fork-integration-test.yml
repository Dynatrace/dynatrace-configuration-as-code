name: Run Integration Tests for Forks

# This workflow builds and runs the tests for any fork. This includes integration tests
# which need to run in the context of the upstream repository. Otherwise, we would
# leak secrets into the fork.
#
# The workflow is triggered by an event dispatched by the "Trigger Integration Tests for
# Forks" workflow. The event contains all the necessary information to clone the branch
# of the PR in the repository of the fork and run the tests against it in a secure
# manner.
#
# After the tests ran, the feedback from the test execution is posted pack to the PR
# as a comment.

on:
  repository_dispatch:
    types: [trigger-integration-tests]

jobs:
  build:
    name: Integration Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.client_payload.user }}/${{ github.event.client_payload.repo }}
          ref: ${{ github.event.client_payload.ref }}

      - name: Build
        run: make build

      - name: Unit Test
        run: make test

      - name: Integration Test
        run: make integration-test
        env:
          URL_ENVIRONMENT_1: ${{ secrets.URL_ENVIRONMENT_1 }}
          URL_ENVIRONMENT_2: ${{ secrets.URL_ENVIRONMENT_2 }}
          TOKEN_ENVIRONMENT_1: ${{ secrets.TOKEN_ENVIRONMENT_1 }}
          TOKEN_ENVIRONMENT_2: ${{ secrets.TOKEN_ENVIRONMENT_2 }}

      - name: Upload Log Files
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: .logs/*.log

      - name: Setup Message
        id: setup_message
        if: ${{ always() }}
        shell: bash
        env:
          STATUS: "${{ job.status }}"
        run: |
          if [[ $STATUS == "success" ]]; then
            echo "::set-output name=MESSAGE::### üéâ Integration tests ran successfully on ${{ matrix.os }} ü•≥"
          else
            echo "::set-output name=MESSAGE::### ‚ùå Integration tests failed on ${{ matrix.os }}"
          fi

      - name: Post Comment
        if: ${{ always() }}
        uses: didiladi/comment-on-pr-action@v1.0.0
        with:
          pr-id: ${{ github.event.client_payload.pr_number }}
          comment-prefix: ${{ github.event.client_payload.comment_prefix }}
          message: ${{ steps.setup_message.outputs.MESSAGE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          user: dynatrace-oss
          repo: ${{ github.event.client_payload.repo }}
