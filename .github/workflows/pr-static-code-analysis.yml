name: Run Static Code Analysis

# This workflow uses golangci-lint to run static code analysis on PRs
# In addition to default golanci-linters checks vulnerability checks (gosec),
# closing of openend http bodies (bodyclose), cyclomatic complexity (cyclop),
# exhaustive switches (exhaustive) and open TODO/FIXME comments (godox)

on:
  pull_request:
    branches: [ main ]
  merge_group: # run if triggered as part of a merge queue

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: ‚¨áÔ∏è Check out code into the Go module directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: üõ†Ô∏è Set up Go 1.x
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b #v5.4.0
        with:
          go-version-file: go.mod

      - name: ‚úçÔ∏è Check format
        run: make lint

      - name: üïµÔ∏è Go vet
        run: make vet

      - name: üîé golangci-lint
        uses: reviewdog/action-golangci-lint@3dfdce20f5ca12d264c214abb993dbb40834da90 #v2.7.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          golangci_lint_version: "v1.64.8"
