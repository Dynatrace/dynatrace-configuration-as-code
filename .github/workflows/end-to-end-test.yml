name: E2E Test

# This builds all binary versions and runs the end-to-end test against test Dynatrace environments
# This currently only runs on push to main and nightly

on:
  push:
    branches: [ main ]
  schedule:
    # nightly build ensure E2E tests run daily and catch any breaking API changes
    - cron: '0 0 * * *'
  pull_request_target:
    types: [ labeled ]

defaults:
  run:
    shell: bash

env:
  BASE_REPO: 'Dynatrace/dynatrace-configuration-as-code'  # Used to only execute directly if running in main repository, not on forks/PRs inside forks
  E2E_TEST_LABEL: 'run-e2e-test'

jobs:

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 #v4.0.1
        with:
          go-version: '~1.20'
        id: go

      - name: Check out base repo
        if: github.event.action != 'labeled'
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3.5.3

      # If a PR was reviewed and deemed safe to run in the context of our repo and it's secrets, we label it to trigger E2E tests.
      # In that case this Action is triggered in pull_request_target context and checks out the HEAD of the PR branch.
      # This is a semi-secure manually reviewed way to ensure we only run code we're fine accessing our secrets
      - name: Check out PR # nosemgrep:yaml.github-actions.security.pull-request-target-code-checkout.pull-request-target-code-checkout
        if: github.event.action == 'labeled' && github.event.label.name == env.E2E_TEST_LABEL
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3.5.3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: üèÅ Build release binaries
        if: github.repository == env.BASE_REPO && (github.event.action != 'labeled' || github.event.label.name == env.E2E_TEST_LABEL)
        run: make build-release

      - name: üåé Integration test
        if: github.repository == env.BASE_REPO && (github.event.action != 'labeled' || github.event.label.name == env.E2E_TEST_LABEL)
        run: make integration-test
        env:
          MONACO_FEAT_GRAPH_DEPLOY: "true" # TODO remove when graph based deployments are activated by default
          MONACO_FEAT_GRAPH_DEPLOY_PARALLEL: "true" # TODO remove when graph based deployments are activated by default

          URL_ENVIRONMENT_1: ${{ secrets.URL_ENVIRONMENT_1 }}
          URL_ENVIRONMENT_2: ${{ secrets.URL_ENVIRONMENT_2 }}
          TOKEN_ENVIRONMENT_1: ${{ secrets.TOKEN_ENVIRONMENT_1 }}
          TOKEN_ENVIRONMENT_2: ${{ secrets.TOKEN_ENVIRONMENT_2 }}
          PLATFORM_URL_ENVIRONMENT_1: ${{ secrets.PLATFORM_URL_ENVIRONMENT_1 }}
          PLATFORM_URL_ENVIRONMENT_2: ${{ secrets.PLATFORM_URL_ENVIRONMENT_2 }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          OAUTH_TOKEN_ENDPOINT: ${{ secrets.OAUTH_TOKEN_ENDPOINT }}

      - name: üßì Integration test (legacy)
        if: github.repository == env.BASE_REPO && (github.event.action != 'labeled' || github.event.label.name == env.E2E_TEST_LABEL)
        run: make integration-test-v1
        env:
          MONACO_FEAT_GRAPH_DEPLOY: "true" # TODO remove when graph based deployments are activated by default
          MONACO_FEAT_GRAPH_DEPLOY_PARALLEL: "true" # TODO remove when graph based deployments are activated by default
          URL_ENVIRONMENT_1: ${{ secrets.URL_ENVIRONMENT_1 }}
          URL_ENVIRONMENT_2: ${{ secrets.URL_ENVIRONMENT_2 }}
          TOKEN_ENVIRONMENT_1: ${{ secrets.TOKEN_ENVIRONMENT_1 }}
          TOKEN_ENVIRONMENT_2: ${{ secrets.TOKEN_ENVIRONMENT_2 }}
          PLATFORM_URL_ENVIRONMENT_1: ${{ secrets.PLATFORM_URL_ENVIRONMENT_1 }}
          PLATFORM_URL_ENVIRONMENT_2: ${{ secrets.PLATFORM_URL_ENVIRONMENT_2 }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          OAUTH_TOKEN_ENDPOINT: ${{ secrets.OAUTH_TOKEN_ENDPOINT }}

      - name: üì•/üì§ Download/Restore test
        if: github.repository == env.BASE_REPO && (github.event.action != 'labeled' || github.event.label.name == env.E2E_TEST_LABEL)
        run: make download-restore-test
        env:
          MONACO_FEAT_GRAPH_DEPLOY: "true" # TODO remove when graph based deployments are activated by default
          MONACO_FEAT_GRAPH_DEPLOY_PARALLEL: "true" # TODO remove when graph based deployments are activated by default
          URL_ENVIRONMENT_1: ${{ secrets.URL_ENVIRONMENT_1 }}
          URL_ENVIRONMENT_2: ${{ secrets.URL_ENVIRONMENT_2 }}
          TOKEN_ENVIRONMENT_1: ${{ secrets.TOKEN_ENVIRONMENT_1 }}
          TOKEN_ENVIRONMENT_2: ${{ secrets.TOKEN_ENVIRONMENT_2 }}
          PLATFORM_URL_ENVIRONMENT_1: ${{ secrets.PLATFORM_URL_ENVIRONMENT_1 }}
          PLATFORM_URL_ENVIRONMENT_2: ${{ secrets.PLATFORM_URL_ENVIRONMENT_2 }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          OAUTH_TOKEN_ENDPOINT: ${{ secrets.OAUTH_TOKEN_ENDPOINT }}

      - name: üåô Nightly Tests
        if: github.repository == env.BASE_REPO && github.event_name == 'schedule'
        run: make nightly-test
        env:
          MONACO_FEAT_GRAPH_DEPLOY: "true" # TODO remove when graph based deployments are activated by default
          MONACO_FEAT_GRAPH_DEPLOY_PARALLEL: "true" # TODO remove when graph based deployments are activated by default
          URL_ENVIRONMENT_1: ${{ secrets.URL_ENVIRONMENT_1 }}
          URL_ENVIRONMENT_2: ${{ secrets.URL_ENVIRONMENT_2 }}
          TOKEN_ENVIRONMENT_1: ${{ secrets.TOKEN_ENVIRONMENT_1 }}
          TOKEN_ENVIRONMENT_2: ${{ secrets.TOKEN_ENVIRONMENT_2 }}
          PLATFORM_URL_ENVIRONMENT_1: ${{ secrets.PLATFORM_URL_ENVIRONMENT_1 }}
          PLATFORM_URL_ENVIRONMENT_2: ${{ secrets.PLATFORM_URL_ENVIRONMENT_2 }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          OAUTH_TOKEN_ENDPOINT: ${{ secrets.OAUTH_TOKEN_ENDPOINT }}

      - name: üßπ Cleanup
        if: github.repository == env.BASE_REPO && github.event_name == 'schedule'
        run: make clean-environments
        env:
          MONACO_FEAT_GRAPH_DEPLOY: "true" # TODO remove when graph based deployments are activated by default
          MONACO_FEAT_GRAPH_DEPLOY_PARALLEL: "true" # TODO remove when graph based deployments are activated by default
          URL_ENVIRONMENT_1: ${{ secrets.URL_ENVIRONMENT_1 }}
          URL_ENVIRONMENT_2: ${{ secrets.URL_ENVIRONMENT_2 }}
          TOKEN_ENVIRONMENT_1: ${{ secrets.TOKEN_ENVIRONMENT_1 }}
          TOKEN_ENVIRONMENT_2: ${{ secrets.TOKEN_ENVIRONMENT_2 }}
          PLATFORM_URL_ENVIRONMENT_1: ${{ secrets.PLATFORM_URL_ENVIRONMENT_1 }}
          PLATFORM_URL_ENVIRONMENT_2: ${{ secrets.PLATFORM_URL_ENVIRONMENT_2 }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
          OAUTH_TOKEN_ENDPOINT: ${{ secrets.OAUTH_TOKEN_ENDPOINT }}
