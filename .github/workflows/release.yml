
name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: '~1.16'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.0.2

      - name: Check Version
        run: |
          CODE_VERSION=`grep "const MonitoringAsCode" pkg/version/version.go | awk -F"[\"\"]" '{print $2}'`
          TAG_VERSION_WITH_PREFIX=${{ github.ref }}
          [ $CODE_VERSION = ${TAG_VERSION_WITH_PREFIX:11} ];
      - name: Build
        run: make build

      - name: Build with xgo
        uses: crazy-max/ghaction-xgo@v1.8.0
        with:
          xgo_version: latest
          go_version: 1.16.15
          dest: build
          prefix: monaco
          targets: windows/386,windows/amd64,linux/386,linux/amd64,darwin/amd64,darwin/arm64
          v: true
          x: false
          pkg: cmd/monaco
          ldflags: -s -w

      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: glentiki/xbin-release-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          assets_path: ./build
